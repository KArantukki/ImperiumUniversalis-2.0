#When adding effects directly in on_actions always consider if it would be best to do so through a scripted effect. on_actions with a lot of script in them are harder to get an overview of.

# country
on_startup = {
	initialize_polis_modifiers = yes
	
	events = {
		babylon.2
	}
		random_country = {
			limit = { ai = no }
				country_event = {
					id = startup.1
				}
		}
		
}

# country
on_religion_change = {
		remove_country_modifier = christian_progroms
		remove_country_modifier = christians_welcomed
		remove_country_modifier = animal_sacrifices_banned
		remove_country_modifier = begger_quater_removed
		remove_country_modifier = bellona_temple
		remove_country_modifier = disrespect_other_gods_modifier
}

# country.
on_secondary_religion_change = {
	
}

# country. Spawned when Enforcing Rebel Demands through a Support Rebels-war.
on_enforce_rebel_demands = {
	# ROOT = The winning country
	# FROM = The loosing country
	set_country_flag = helped_rebels_win_war
}

# country
on_colonial_liberation = {
	
}

# country
on_colonial_reintegration = {
	
}

# country
on_peace_actor = {
	
}

# country
on_peace_recipient = {
	
}

# country
# root = winning country, from = loser country
on_war_won = {
	events = {
	}
}

# country
# root = loser country, from = winner country
on_war_lost = {
	events = {
		diplomacy.6
	}
}

# country
# root = winning country, from = loser country
on_battle_won_country = {
		if = {
			limit = {
				NOT = { has_country_modifier = slavery_abolished }
			}
			random = {
				chance = 50
				change_variable = { which = slaves value = 1000 }
			}
		}
}

# country
# root = loser country, from = winner country
on_battle_lost_country = {
	
}

# province
# root = location, from = loser country
on_battle_won_province = {
	
}

#Unit Scope OnAction for Battle Won
on_battle_won_unit = {
	# if = {
		# limit = {
			# unit_owner = { ai = no } #Scopes to Unit Owner from Unit Scope
			# general_with_steam_name = yes #Unit Scope Trigger
		# }
		# unit_owner = { set_country_flag = general_with_steam_name_won_battle }
	# }
}

# #Unit Scope OnAction for Battle Lost
on_battle_lost_unit = {
	
}

# province
# root = location, from = country doing it
on_added_to_trade_company ={

}

# province
# root = location, from = country doing it
on_removed_from_company ={

}

# province
# root = location, from = country doing it
on_company_formed ={

}

# province
# root = location, from = country doing it
on_company_disolved ={

}

# province
# root = location, from = winner country
on_battle_lost_province = {
	
}

# country
# root = winning country, from = location
on_siege_won_country = {
		random_events = {		
			25 = slaves.2
			25 = slaves.4
			15 = slaves.5
			
			50 = 0 
			}

		if = {
			limit = {
				NOT = { has_country_modifier = slavery_abolished }
			}
			random = {
				chance = 50
				change_variable = { which = slaves value = 500 }
			}
		}
}

# country
# root = losing country, from = location
on_siege_lost_country = {
		if = {
			limit = {
				NOT = { has_country_modifier = slavery_abolished }
				check_variable = {
						which = slaves
						value = 1000
					}
			}
			random = {
				chance = 50
				change_variable = { which = slaves value = -500 }
			}
		}
}

# province
# root = location, from = losing country
on_siege_won_province = {
}

# province
# root = location, from = winning country
on_siege_lost_province =  {
	
}

# province
# root = location, from = country that abandons colony
# Fired right before the colony is abandoned.
on_abandon_colony = {
}

# country 
on_new_monarch = {
	if = {
		limit = { has_ruler = "Alexander III the Great"}
		set_country_flag = alexander_is_ruler
	}
}

on_new_consort = {
	
}

# country
on_monarch_death = {
	events = {
		epirus.2
		india.2
		subject_event.1
	}
	if = {
		limit = { 	has_country_flag = alexander_is_ruler }
					clr_country_flag = alexander_is_ruler
	}
}

# country 
on_regent = {
	events = {
		
	}
}

# country 
on_new_term_election = {
	events = {
		elections.1	
		greek_polis.400 # Democratic Polis Election	
		greek_polis.402 # Oligarchic Polis Election	
	}
}

# country 
on_death_election = {
	events = {
		elections.2
		greek_polis.401 # Democratic Polis Election	
		greek_polis.403 # Oligarchic Polis Election	
		greek_polis.404 # Tyrannis Polis Election	
	}
}
# country 

# country
on_death_foreign_slave_ruler = {
	# events = {
		# mamluk_events.0 # Choose new ruler
	# }
}

on_replace_governor = {
	
}


# country
on_bankruptcy = {
}

# country (country annexing, root = target)
on_diplomatic_annex = {
	
}

# country
on_heir_death = {
	remove_country_modifier = heir_is_coruler
}

# country
on_queen_death = {
	
	# if = {
		# limit = { has_consort_flag = 10_years_anniversary }
		# set_ruler_flag = had_10_years_anniversary
	# }
	# if = {
		# limit = { has_consort_flag = 20_years_anniversary }
		# set_ruler_flag = had_20_years_anniversary
	# }
	# if = {
		# limit = { has_consort_flag = consort_has_affection_of_ruler }
		# set_ruler_flag = consort_had_affection_of_ruler
	# }

	# if = {
		# limit = {
			# has_regency = no
			# NOT = { has_ruler_flag = widow_widower }
		# }
		# set_ruler_flag = widow_widower
	# }
	# if = {
		# limit = { has_consort_regency = no }
		# random_owned_province = {
			# limit = { has_province_modifier = domain_of_spouses_family }
			# remove_province_modifier = domain_of_spouses_family
		# }
	# }
	# if = {
		# limit = { has_ruler_flag = accepted_help_from_spouses_family }
		# clr_ruler_flag = accepted_help_from_spouses_family
	# }
	# if = {
		# limit = { has_ruler_flag = helped_spouses_family }
		# clr_ruler_flag = helped_spouses_family
	# }
	# if = {
		# limit = { has_ruler_flag = refused_to_help_spouses_family }
		# clr_ruler_flag = refused_to_help_spouses_family
	# }
	# if = {
		# limit = { has_ruler_flag = lowborn_consort }
		# random_owned_province = {
			# limit = { has_province_modifier = home_of_consort }
			# remove_province_modifier = home_of_consort
		# }
	# }
	# if = {
		# limit = { has_ruler_flag = lowborn_consort }
		# clr_ruler_flag = lowborn_consort
	# }
	# if = {
		# limit = { has_country_modifier = consort_adm_advice }
		# remove_country_modifier = consort_adm_advice
	# }
	# if = {
		# limit = { has_country_modifier = consort_dip_advice }
		# remove_country_modifier = consort_dip_advice
	# }
	# if = {
		# limit = { has_country_modifier = consort_mil_advice }
		# remove_country_modifier = consort_mil_advice
	# }
	# if = {
		# limit = { has_country_modifier = without_spouse_advice }
		# remove_country_modifier = without_spouse_advice
	# }
	# if = {
		# limit = { has_ruler_modifier = affectionate_royal_couple }
		# remove_country_modifier = affectionate_royal_couple
	# }
	# clr_ruler_flag = marriage_length
}

# country
on_new_heir = {
}

# country 
on_weak_heir_claim = {
	
}

# country : no heir in theocracy
on_heir_needed_theocracy = {
	events = {
		elections.3
		sparta.1
	}
}

# Emperor from same dynasty
on_successive_emperor = {
	
}

# HRE Prince released by the emperor
on_released_hre_member = {
	events = {
	}
}

# HRE Prince converts to non-Emperor religion
on_hre_member_false_religion = {
	events = {
	}
}

# HRE Prince converts to Emperor religion
on_hre_member_true_religion = {
	events = {
	}
}

# Emperor wins HRE defensive war
on_hre_wins_defensive_war = {
	events = {
	}
}

# HRE member annexed by non-HRE country
on_hre_member_annexed = {
	events = {
	}
}

# HRE member released from non-HRE vassalage
on_hre_released_vassal = {
	events = {
	}
}

# HRE member transferred from non-HRE vassalage to Emperor
on_hre_transfered_vassal = {
	events = {
	}
}

# Emperor coming to the defense of a HRE member
on_hre_defense = {
	events = {
	}
}

# Emperor NOT coming to the defense of a HRE member
on_hre_non_defense = {
	events = {
	}
}

# HRE Member takes a HRE province from an outs100e country in a peace (province scope)
on_hre_province_reconquest = {
	events = {
	}
}

on_lock_hre_religion = {
	events = {
	}
}

on_change_hre_religion = {
	events = {
	}
}

on_hre_religion_white_peace = {
	events = {
	}
}

# When a non-native changes government type
on_government_change = {
	# if = {
		# limit = {
			# NOT = { government = monarchy }
			# any_owned_province = {
				# has_province_modifier = domain_of_spouses_family
			# }
		# }
		# random_owned_province = {
			# limit = { has_province_modifier = domain_of_spouses_family }
			# remove_province_modifier = domain_of_spouses_family
		# }
	# }
	# if = {
		# limit = {
			# NOT = { government = monarchy }
			# any_owned_province = {
				# has_province_modifier = home_of_consort
			# }
		# }
		# random_owned_province = {
			# limit = { has_province_modifier = home_of_consort }
			# remove_province_modifier = home_of_consort
		# }
	# }
	# if = {
		# limit = {
			# OR = {
				# tag = ENG
				# tag = GBR
			# }
			# any_owned_province = {
				# has_province_modifier = rotten_borough
			# }
		# }
		# every_owned_province = {
			# limit = {
				# has_province_modifier = rotten_borough
			# }
			# remove_province_modifier = rotten_borough
		# }
	# }
}

# When a native changes government after filling all their advancement groups.
on_native_change_government = {
}

# Nation is integrated after being in union
on_integrate = {
	events = {
	}
}

# Nation annexed
on_annexed = {
	events = {
	}
}

# When the chinese empire gets dismantled (e.g. when the emperor is annexed)
# FROM = Emperor, ROOT = Current Nation
on_chinese_empire_dismantled = {
	events = {
		
	}
}

# When a nation gains the Mandate of Heaven (becomes the Emperor of China)
# FROM = Old Emperor, ROOT = New Emperor
on_mandate_of_heaven_gained = {
	# if = {
		# limit = {
			# technology_group = nomad_group
		# }
		# change_technology_group = chinese
		# change_unit_type = chinese
	# }
	# change_government = celestial_empire
	# set_mandate = 60
	# china_superregion = {
		# limit = {
			# NOT = { is_core = ROOT }
		# }
		# add_permanent_claim = ROOT
	# }
	# if = {
		# limit = {
			# has_dlc = "Mandate of Heaven"
		# }
		# remove_faction = temples
		# remove_faction = enuchs
		# remove_faction = bureaucrats
	# }
	# if = {
		# limit = {
			# has_country_modifier = lost_mandate_of_heaven
		# }
		# remove_country_modifier = lost_mandate_of_heaven
	# }
	# country_event = { #Reforming the Bureaucracy
		# id = china_events.31
		# days = 365
	# }
	# country_event = {
		# id = china_events.32 #Records of the last Empire
		# days = 183
	# }
	# country_event = {
		# id = celestial_empire_events.2
		# days = 1825
	# }
}

# When a nation loses the Mandate of Heaven
# FROM = New Emperor, ROOT = Old Emperor
on_mandate_of_heaven_lost = {
	# change_government = despotic_monarchy
	# set_government_rank = 2
	# add_country_modifier = {
		# name = lost_mandate_of_heaven
		# duration = 7300	# 20 years
	# }
	# add_stability = -2
	# china_superregion = {
		# limit = {
			# is_permanent_claim = ROOT
		# }
		# remove_claim = ROOT
	# }
}

on_dismantle_revolution = {
	
}

# province
on_adm_development = {
	add_base_tax = -1
	events = {
		prov_preveliges.1
		prov_preveliges.2
	}
}

# province
on_dip_development = {
}

# province
on_mil_development = {
}

on_overextension_pulse = {
	random_events = {
		
	}
}

on_colonial_pulse = {
	random_events = {
		
	}
}

on_siberian_pulse = {
}

# country random events
on_bi_yearly_pulse = {
}

on_bi_yearly_pulse_2 = {
	random_events = {
		100 = elephants.3
		500 = 0
			
	}
}

on_bi_yearly_pulse_3 = {
}

on_bi_yearly_pulse_4 = {
}

# country random events
on_thri_yearly_pulse = {
	random_events = {
			
			100 = randomprovince.12
			100 = randomprovince.13
	
			100 = culture.1
			100 = culture.2
			100 = culture.3
			100 = culture.4
			100 = culture.5
			100 = culture.6
			25 = culture.8	# wave of indian influence
			100 = culture.9
			100 = culture.10
			100 = culture.11
			
			50 = religion_romangreek.1
			50 = religion_romangreek.2
			50 = religion_romangreek.3
			50 = religion_romangreek.4
			50 = religion_romangreek.5
			50 = religion_romangreek.6
			50 = religion_romangreek.7
			50 = religion_romangreek.8
			
			100 = religion_persia.2
			100 = religion_persia.3
			100 = religion_persia.4
			
			25 = religion_indian.1 		# Ruler become ascet
			100 = religion_indian.2
			100 = religion_indian.6
			100 = religion_indian.8
					
			100 = religion_celtic.1
			100 = religion_celtic.2
			
			100 = religion.1
			100 = religion.2	
			100 = religion.3
			25 = religion.4 	# cybele cult
			100 = religion.8
			
			100 = rome.1
			100 = rome.2
			
			100 = sparta.2
			100 = sparta.3
			100 = sparta.4
			100 = sparta.9
			
			100 = arabia.1
			
			100 = carthage.6
			100 = carthage.9
			
			100 = egypt.1
			
			50 = china.2
			100 = china.3
			100 = china.4
			100 = china.5
			100 = china.6
		
			25 = greek.11
			50 = greek.12
			
			100 = india.5
			100 = india.6
			100 = india.7
			100 = india.8
			
			
			600 = 0
		
	}
		
}

on_thri_yearly_pulse_2 = {
		random_events = {
		
			100 = republic.1
			100 = republic.2
			100 = republic.3
			100 = republic.4
			100 = republic.5
			25 = republic.6		# Ruler gets killed
			100 = republic.8
			100 = republic.9
			100 = republic.10
			100 = republic.11
			100 = republic.12
			50 = republic.14
			
			100 = government.1
			100 = government.2
			100 = government.3
			100 = government.4
			100 = government.5
			50 = government.6	# Ruler gets ill
			100 = government.8
			100 = government.9
			100 = government.10
			100 = government.11
			100 = government.12
			100 = government.13
			100 = government.16
			100 = government.18
			100 = government.26
			100 = government.27
			
			25 = monarchy.3 	# Heir gets killed
			100 = monarchy.4
			100 = monarchy.5
			100 = monarchy.6
			100 = monarchy.7
			100 = monarchy.8
			50 = monarchy.10
			
			100 = tribal.1
			100 = tribal.2
			100 = tribal.8
			100 = tribal.9
			100 = tribal.10
			100 = tribal.13
			100 = tribal.14
			100 = tribal.15
			100 = tribal.16
			100 = tribal.17
			100 = tribal.18
			100 = tribal.19
			100 = tribal.20
			100 = tribal.21
			100 = tribal.22
			100 = tribal.23
			100 = tribal.24
			
			50 = germania.2
			
			100 = greek_polis.6
			100 = greek_polis.7
			100 = greek_polis.8
			100 = greek_polis.9
			100 = greek_polis.10
			
			50 = advisor_event.1
			50 = advisor_event.2
			50 = advisor_event.3
			50 = advisor_event.4
			50 = advisor_event.5
			50 = advisor_event.6
			50 = advisor_event.7
			50 = advisor_event.8
			50 = advisor_event.9
			
			50 = reform.1
			50 = reform.2
			50 = reform.3
			
			100 = military.2
			100 = military.3
			100 = military.4
			100 = military.5
			100 = military.6
			100 = military.7
			100 = military.8
			100 = military.9
			100 = military.10
			
			600 = 0
			
	}
}

on_thri_yearly_pulse_3 = {
	# Rebellions and uprisings
	random_events = {
			100 = slaves.6
			100 = government.7
			
			1000 = 0
	}
}

on_thri_yearly_pulse_4 = {
	random_events = {
			100 = building_events.1
			100 = building_events.2
			100 = building_events.3
			100 = building_events.4
			100 = building_events.5
			100 = building_events.6
	
			
			100 = economy.2
			100 = economy.4
			100 = economy.5
			100 = economy.7
			100 = economy.8
			100 = economy.9
			100 = economy.10
			50 = economy.11
			100 = economy.12
			100 = economy.13
			100 = economy.14
			
			100 = diplomacy.3
			100 = diplomacy.5
			100 = diplomacy.7
			100 = diplomacy.9
			
			100 = subject_event.4
			
			100 = trade_events.1
			100 = trade_events.6
			100 = trade_events.7
			100 = trade_events.8
			100 = trade_events.9
			
			100 = idea_event.1
			100 = idea_event.2
			100 = idea_event.3
			100 = idea_event.4
			100 = idea_event.5
			100 = idea_event.6
			100 = idea_event.7
			100 = idea_event.8
			100 = idea_event.9
			100 = idea_event.10
			100 = idea_event.11
			
			500 = 0
			}
}

on_four_year_pulse = {
	events = {
		olympia.1
	}
}

on_four_year_pulse_2 = {
	events = {
		slaves.1
	}
}

on_four_year_pulse_3 = {
}

on_four_year_pulse_4 = {
}

on_five_year_pulse = {
	
	events = {
		babylon.1
	}
}


# Estates pulse
on_five_year_pulse_2 = {
	random_events = {	
	        
	}
}

on_five_year_pulse_3 = {
}

on_five_year_pulse_4 = {
}

# El Dorado
on_explore_coast = {
	random_events = {
		
	}
}
on_conquistador_empty = {
	random_events = {
		
	}
}

on_conquistador_native = {
	random_events = {
		
	}
}

on_buy_religious_reform = {
	events = {
		
	}
}

on_circumnavigation = {
	events = {
		
	}
}

on_become_free_city = {
	events = {
		
	}
}

on_remove_free_city = {
	events = {
		
	}
}

on_revoke_estate_land_ai = { #AI can't handle the rebels atm or perform a gradual revoke, sorry
	remove_province_modifier = autonomous_building_allowed
}

on_revoke_estate_land = {
	remove_province_modifier = autonomous_building_allowed
	if = {
		limit = {
			has_estate = estate_allies
			can_spawn_rebels = nationalist_rebels 
		}
		spawn_rebels = {
			type = nationalist_rebels
			size = 1
		}
	}
	if = {
		limit = {
			has_estate = estate_free_city
			can_spawn_rebels = nationalist_rebels 
		}
		spawn_rebels = {
			type = nationalist_rebels
			size = 2
		}
	}
	if = {
		limit = {
			has_estate = estate_privileged_city
			can_spawn_rebels = peasent_rebels 
		}
		spawn_rebels = {
			type = peasent_rebels
			size = 2
		}
	}
}

on_revoke_estate_land_ai_post = {
}
on_revoke_estate_land_post = {
}

on_grant_estate_land = {
}

on_death_has_harem = {
	
}

on_select_heir_from_harem = {
}

on_fetishist_cult_change = {
	
}

# country
on_gain_great_power_status = {
	
}

# country
on_lose_great_power_status = {
}

# province
on_province_religion_converted = {
	add_patriarch_authority = 0.02
}

# province
on_province_culture_converted = {
}

# THIS = Province, FROM = Country who Propogated
on_convert_by_trade_policy = {
	# if = {
		# limit = {
			# trade_company_region = trade_company_moluccas
		# }
		# FROM = {	
			# if = {
				# limit = {
					# ai = no
					# NOT = { check_variable = { which = religion_propagated_in_moluccas value = 1 } }
				# }
				# set_variable = {
					# which = religion_propagated_in_moluccas value = 1
				# }
			# }
			# else_if = {
				# limit = {
					# ai = no
					# check_variable = { which = religion_propagated_in_moluccas value = 1 }
					# NOT = { check_variable = { which = religion_propagated_in_moluccas value = 6 } }
				# }
				# change_variable = {
					# which = religion_propagated_in_moluccas value = 1
				# }
			# }
		# }
	# }
}

# province
on_province_owner_change = {
	remove_province_modifier = autonomous_building_allowed
}

# country
on_parliament_debate_failed = {
}

# country
on_parliament_debate_succeeded = {
}

# country 
# you can add some "on_harmonized_<religion_name>" for the mod's religions

# country
on_russian_subednik = {
	add_prestige = 10
}

# country
on_russian_oprichnina = {
	add_stability = 1
}

# country
on_russian_streltsy = {
	add_army_tradition = 1
}

# province
on_consecrate_patriarch = {
}

# country. from = overlord
on_accept_tribute = {
}

# country. from = overlord
on_refuse_tribute = {
}

# country
on_leader_recruited = {
}

# country
on_general_recruited = {
	add_army_professionalism = 0.01
	events = {
		#military.10
	}
}

# country
on_admiral_recruited = {
}

# country
on_conquistador_recruited = {
}

# country
on_explorer_recruited = {
}

# THIS = Province, FROM = Country
on_regiment_recruited = {
	
}

# THIS = Province, FROM = Country
on_mercenary_recruited = {
	FROM = {
		add_army_professionalism = -0.0015
	}
}

# THIS = One province in the state
on_add_pasha = {
}

# THIS = One province in the state
on_remove_pasha = {
}

# THIS = Province
on_janissaries_raised = {
	
}

on_reform_enacted = {
}

on_reform_changed = {
	if = {
		limit = { 	NOT = { has_reform = greek_polis_reform }
					OR = {
						has_country_modifier = polis_tyrannis_modifier
						has_country_modifier = polis_oligarchy_modifier
						has_country_modifier = polis_democracy_modifier
					}
				}
			remove_country_modifier = polis_tyrannis_modifier
			remove_country_modifier = polis_oligarchy_modifier
			remove_country_modifier = polis_democracy_modifier
	}
}

on_trade_company_investment = {
}

on_center_of_trade_upgrade = {

}

on_center_of_trade_downgrade = {

}

on_culture_promoted = {

}

# FROM = Previous Country, ROOT = Province
on_company_chartered = {
}

# ROOT = Overlord, FROM = Minor
on_dependency_gained = {
	events = {
	}
}

# ROOT = Overlord, FROM = Minor
on_dependency_lost = {
	
}

		# ROOT = New vassal, FROM = Overlord
on_create_vassal = {
	FROM = {
		create_subject = {
			subject_type = half_autonomous_vassal
			subject = ROOT
		}
	}
}

# ROOT = Country establishing it
# First province in state is set
on_holy_order_established = {

}

# When a minority is expelled to a colony
# THIS = Colony, ROOT = Colony, FROM = Home province
on_minority_expelled = {

}

# THIS = Raiding country, FROM = Sea province
on_raid_coast = {
	change_variable = { which = slaves value = 500 }
}

# ROOT = Tag that captured the flagship, FROM = Tag that lost the flagship
on_flagship_captured = {
}

# ROOT = Tag that destroyed the flagship, FROM = Tag that lost the flagship
on_flagship_destroyed = {
}

# this = Released country, FROM = Releasing country
on_country_released = {
}