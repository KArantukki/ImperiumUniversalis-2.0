estate_privileged_city = {
	icon = 1
	color = { 224 11 4 }
	keep_on_conquest = no
	always_remove_on_religious_conquest = no
	min_territory = 0
	min_provinces_to_want_territory = 0

	# If true, country will get estate
	trigger = {
		NOT = { government = tribal }
		num_of_cities = 2
	}
	
	territory_power_modifier = 0.0
	
	# If true, province can be granted to estate
	province_trigger = {
		OR = {
			has_owner_culture = yes 
			has_owner_accepted_culture = yes
			AND = {
				culture_group = OWNER
				has_country_modifier = social_war_compromise
			}
		}
			base_production = 1
			base_tax = 1
	}
	
	# Is used to weigh importance compared to other estates
	#start_territory_weight = 1
	
	# Min autonomy in estate provinces
	min_autonomy = 10
	autonomy_does_not_affect = local_tax_modifier
	autonomy_does_not_affect = local_production_efficiency 
	autonomy_does_not_affect = province_trade_power_modifier  
	autonomy_does_not_affect = local_build_cost  

	# These scale with loyalty & power
	country_modifier_happy = {

	}
	country_modifier_neutral = {
		
	}	
	country_modifier_angry = {
		
	}	
	
	# These do not scale, but only applied in provinces owned by the estate
	province_modifier_happy = {
		local_tax_modifier = 0.15
		local_production_efficiency = 0.15
		local_amount_of_banners = 0.5
	}
	province_modifier_neutral = {
		local_tax_modifier = 0.15
		local_production_efficiency = 0.15
		local_amount_of_banners = 0.5
	}	
	province_modifier_angry = {
		local_tax_modifier = 0.15
		local_production_efficiency = 0.15
		local_amount_of_banners = 0.5
	}	
	
	# Influence modifiers##############################################
	base_influence = 0
	
	# Loyalty modifiers ##############################################
	
	#############################################################
	
	custom_name = {
		desc = estate_isopolitida_polis
		trigger = {
			culture_group = hellenic
		}
	}
	custom_name = {
		desc = estate_municipium
		trigger = {
			culture_group = italic
		}
	}
	custom_name = {
		desc = estate_privileged_city
		trigger = {
			always = yes
		}
	}

	
	# Does the AI want to give any extra territory beyond the minimum?
			
	ai_territory_modifier = {
		trigger = {
			always = yes
		}	
		value = 10
	}	
	
	# For province assignment
	ai_grant_province = {
		factor = 1	
		modifier = {
			factor = 0.5
			NOT = { base_tax = 1 }
		}	
		modifier = {
			factor = 0.5
			NOT = { base_production = 2 }
		}
		modifier = {
			factor = 2
			base_tax = 2
		}	
		modifier = {
			factor = 2
			base_production = 4
		}
		modifier = {
			factor = 1.25
			has_owner_culture = yes
		}
		modifier = {
			factor = 0.25
			local_autonomy = 50
		}
		modifier = {
			factor = 1.25
			NOT = { local_autonomy = 25 }
		}
	}	
	
	
	# Special interactions ########################################
	
	#############################
	# allow autonomous building
	############################
	interaction = {
		name = "ALLOW_AUTONOMOUS_BUILDING"
		icon = 11
		
		years_between_use = 1
		
		potential = {
			any_owned_province = {
				has_estate = estate_privileged_city
				NOT = { has_province_modifier = autonomous_building_allowed }
			}
		}
		trigger = {
			always = yes
		}
		
		effect = {
			custom_tooltip = autonomous_building_tt
			every_owned_province = {
				limit = { 
					has_estate = estate_privileged_city 
					NOT = { has_province_modifier = autonomous_building_allowed }
					}
					add_province_modifier = { 
						name = autonomous_building_allowed
						duration = -1 
					}
			}
		}
		
		ai_will_do = {
			factor = 1
		}
	}
	#############################
	# forbid autonomous building
	############################
	interaction = {
		name = "FORBID_AUTONOMOUS_BUILDING"
		icon = 10
		
		years_between_use = 1
		
		potential = {
			any_owned_province = {
				has_estate = estate_privileged_city
				has_province_modifier = autonomous_building_allowed
			}
		}
		trigger = {
			always = yes
		}
		
		effect = {
			custom_tooltip = f_autonomous_building_tt
			every_owned_province = {
				limit = { 
					has_estate = estate_privileged_city 
					has_province_modifier = autonomous_building_allowed
					}
					remove_province_modifier = autonomous_building_allowed
					add_local_autonomy = -5 
			}
		}
		
		ai_will_do = {
			factor = 0
		}
	}
}